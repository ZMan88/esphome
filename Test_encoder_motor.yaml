esphome:
  name: test_encoder_motor
  platform: ESP8266
  board: nodemcuv2

wifi:
  networks:
    - ssid: "HomeLink"
      password: !secret homeLinkPass
    - ssid: "tazi"
      password: !secret taziPass

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Test-Encoder-Motor"
    password: "1234567890"
# web_server:
#   port: 80
captive_portal:

# Enable logging
logger:

sensor:
  - platform: rotary_encoder
    id: motor_encoder
    name: "Rotary Encoder"
    pin_a: D5
    pin_b: D6
    on_raw_value:
      # - cover.template.publish:
      #     id: test_cover
      #     position: 
      #       lambda: |-
      #         return (id(motor_encoder).state + 2000) / 4000f);
      - if:
          condition:
            lambda: |-
              return (id(motor_encoder).state < -2000 && id(close_cover).state ) || ( id(motor_encoder).state > 2000 && id(open_cover).state);
          then:
            - switch.turn_off: open_cover
            - switch.turn_off: close_cover

switch:
- platform: gpio
  pin: D3
  name: "Open cover"
  interlock: &interlock [open_cover, close_cover]
  id: open_cover
- platform: gpio
  pin: D2
  name: "Close cover"
  interlock: *interlock
  id: close_cover
  
cover:
  - platform: template
    id: test_cover
    name: "Template Cover"
    lambda: |-
      if (id(motor_encoder).state >= 2000) {
        return COVER_OPEN;
      } else {
        return COVER_CLOSED;
      }
    open_action:
      - switch.turn_on: open_cover
    close_action:
      - switch.turn_on: close_cover
    stop_action:
      - switch.turn_off: close_cover
      - switch.turn_off: open_cover
    optimistic: false
    has_position: true

# Enable Home Assistant API
api:
  password: !secret apiPass

ota:
  password: !secret apiPass
